<?php

/**
 * Implements hook_install().
 */
function pagos_stripe_install() {
  pagos_stripe_create_stripe_customer_id_field();
}

/**
 * Adds the stripe_customer_id field to the user entity.
 */
function pagos_stripe_create_stripe_customer_id_field() {
  // Add a stripe_customer_id field to the user entity.
  $entity_type_manager = \Drupal::entityTypeManager();
  $field_storage = $entity_type_manager->getStorage('field_storage_config')->load('user.stripe_customer_id');
  if (!$field_storage) {
    $field_storage = $entity_type_manager->getStorage('field_storage_config')->create([
      'entity_type' => 'user',
      'field_name' => 'stripe_customer_id',
      'type' => 'string',
      'cardinality' => 1,
      'settings' => [],
      'status' => TRUE,
    ]);
    $field_storage->save();
  }

  $field = $entity_type_manager->getStorage('field_config')->load('user.user.stripe_customer_id');
  if (!$field) {
    $field = $entity_type_manager->getStorage('field_config')->create([
      'field_storage' => $field_storage,
      'bundle' => 'user',
      'label' => t('Stripe customer ID'),
      'settings' => [],
    ]);
    $field->save();
  }
}


/**
 * AÃ±adir campo email a los pagos.
 */
function pagos_stripe_update_9001(&$sandbox) {
  if(!Drupal::database()->schema()->fieldExists('pagos', 'mail')) {
    $definition = \Drupal\Core\Field\BaseFieldDefinition::create('email')
      ->setLabel('Email');
    $update_manager = \Drupal::entityDefinitionUpdateManager();
    $update_manager->installFieldStorageDefinition('mail', 'pago', 'pagos_stripe', $definition);
  }
}
